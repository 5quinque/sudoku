{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/errorCheck.js","webpack:///./src/input.js","webpack:///./src/script.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","errorCheck","[object Object]","sudoku","this","classList","isValid","row","exec","col","isRowValid","elClass","matches","document","querySelectorAll","values","el","childNodes","includes","push","rc","x","val","isValidStar","remove","console","log","y","getStartingCol","j","querySelector","contains","add","tiles","input","addInputListeners","inputs","length","addEventListener","self","checkValid","storeBoxValue","key","parentElement","test","error","checkLine","square","getSquareIndexFromClassList","checkSquare","currentValues","clearLine","clearSquare","score","difficulty","drawGame","puzzle","getPuzzle","drawPuzzle","Math","floor","innerHTML","isGood","clearErrors","classes","tempCol","ceil"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict';\n\nclass Error {\n  constructor(sudoku) {\n    this.sudoku = sudoku;\n  }\n  /**\n   * \n   * @description Check row, col and 3x3 square for given tile\n   * @returns {undefined}\n   */\n  isValidStar(classList) {\n    let isValid = true;\n    let memx = {};\n    let memy = {};\n    let memsq = {};\n\n    let row = /row(\\d)/.exec(classList);\n    let col = /col(\\d)/.exec(classList);\n\n    if (!this.isRowValid(\".\"+row[0]))\n      isValid = false;\n    if (!this.isRowValid(\".\"+col[0]))\n      isValid = false;\n\n    // [TODO] Check is square is valid\n \n    return isValid;\n  }\n\n  /**\n   * \n   * @description Check if a row is valid for given tile class\n   * @returns {undefined}\n   */\n  isRowValid(elClass) {\n    let isValid = true;\n    let matches = document.querySelectorAll(elClass);\n    let values = [];\n\n    for (let el of matches) {\n      if (!el.childNodes[0].value)\n        continue;\n      if (values.includes(el.childNodes[0].value)) {\n        isValid = false;\n        break;\n      }\n      values.push(el.childNodes[0].value);\n    }\n\n    return isValid;\n  }\n\n  /**\n   * \n   * @description Remove 'error' class from valid boxes on given line\n   * @returns {undefined}\n   */\n  clearLine(rc, x, val) {\n    let matches = document.querySelectorAll(\".\"+rc+x);\n\n    for (let el of matches) {\n      if (el.childNodes[0].value == val) {\n        // Check if removal is valid..\n        if (this.isValidStar(el.classList)) {\n          el.classList.remove(\"error\");\n          //console.log(\"Valid square, removing error class\", el.classList);\n        } else {\n          console.log(\"Still an error, not removing error class\", el.classList);\n        }\n      }\n    }\n  }\n\n  /**\n   * [TODO] Make this the same as clearLine\n   * @description Remove 'error' calss from valid boxes on given square\n   * @returns {undefined}\n   */\n  clearSquare(i, val) {\n    let x, y;\n\n    // Get starting col\n    this.sudoku.getStartingCol(i);\n\n    // Get starting row\n    if (i < 4) {\n      y = 1;\n    } else if (i < 7) {\n      y = 4;\n    } else {\n      y = 7;\n    }\n \n    for (let i = x; i < x+3; i++) {\n      for (let j = y; j < y+3; j++) {\n        let el = document.querySelector(\".col\"+i+\".row\"+j);\n        if (el.childNodes[0].value == val) {\n          el.classList.remove(\"error\");\n        }\n      }\n    }\n  }\n\n\n\n  /**\n   * [UNUSED]\n   * @description Highlights a given line \n   * @returns {undefined}\n   */\n  highlightLine(rc, x) {\n    let matches = document.querySelectorAll(\".\"+rc+x);\n\n    for (let el of matches) {\n      if (!el.classList.contains(\"error\"))\n        el.classList.add(\"error\");\n    }\n  }\n\n  /**\n   * [UNUSED]\n   * @description Remove 'error' class from all divs in the grid\n   * @returns {undefined}\n   */\n  clearErrors() {\n    let tiles = document.querySelectorAll(\".ninexnine_wrapper > *\");\n\n    for (let el of tiles) {\n      el.classList.remove(\"error\");\n    }\n  }\n\n}\n\nexport default Error;\n","'use strict';\n\nclass Input {\n  constructor(sudoku) {\n    let self = this;\n    this.sudoku = sudoku;\n\n    this.addInputListeners(); \n  }\n\n  addInputListeners() {\n    let inputs = document.querySelectorAll(\".ninexnine_wrapper > div > input\");\n    \n    // Loop through all inputs adding event listeners\n    for (let i = 0; i < inputs.length; i++) {\n      inputs[i].addEventListener(\"input\", function() {\n        // Everytime the value is updated check if it's valid\n        self.checkValid(this);\n      });\n      inputs[i].addEventListener(\"focus\", function() {\n        // Store the box value for comparison when it's updated\n        self.storeBoxValue(this);\n      });\n    }\n  }\n\n  checkValid(el) {\n    let key = el.parentElement.classList[0] + el.parentElement.classList[1];\n    console.log(\"New\", el.value);\n  \n    this.sudoku.test = {};\n  \n    let error = false;\n  \n    let row = /row(\\d)/.exec(el.parentElement.classList.value);\n    let col = /col(\\d)/.exec(el.parentElement.classList.value);\n  \n    if (!this.sudoku.checkLine(\"row\", row[1])) error = true;\n    if (!this.sudoku.checkLine(\"col\", col[1])) error = true;\n    \n    let square = this.sudoku.getSquareIndexFromClassList(el.parentElement.classList.value);\n    if (!this.sudoku.checkSquare(square)) error = true;\n  \n    if (error) {\n      if (!el.parentElement.classList.contains(\"error\"))\n        el.parentElement.classList.add(\"error\");\n    }\n  \n    if (el.value != this.sudoku.currentValues[key] && this.sudoku.currentValues[key]) {\n      console.log(\"Clear all neighbouring errors with value\", this.sudoku.currentValues[key]);\n      this.sudoku.error.clearLine(\"row\", row[1], this.sudoku.currentValues[key]);\n      this.sudoku.error.clearLine(\"col\", col[1], this.sudoku.currentValues[key]);\n  \n      this.sudoku.error.clearSquare(square, this.sudoku.currentValues[key]);\n    }\n  \n    this.sudoku.currentValues[key] = el.value;\n  \n    if (!el.value) {\n      el.parentElement.classList.remove(\"error\");\n    }\n  \n  }\n  \n  /**\n   * \n   * @description Store the value of of box, for future comparison\n   * @returns {undefined}\n   */\n  storeBoxValue(el) {\n    let key = el.parentElement.classList[0] + el.parentElement.classList[1];\n\n    if (el.value) {\n      console.log(\"Current\", el.value);\n      this.sudoku.currentValues[key] = el.value;\n    }\n  }\n\n}\n\nexport default Input;\n","'use strict';\n\nimport Error from './errorCheck.js'\nimport Input from './input.js'\n\nclass Sudoku {\n  constructor() {\n    this.score = 0;\n    this.difficulty = false;\n\n    this.test = {};\n\n    this.currentValues = {};\n\n    this.drawGame();\n\n    this.input = new Input(this);\n    this.error = new Error(this);\n  }\n\n  drawGame() {\n    // check difficulty\n    // create new puzzle\n    let puzzle = this.getPuzzle();\n\n    // add to DOM\n    this.drawPuzzle(puzzle);\n  }\n\n  drawPuzzle(puzzle) {\n    let col, row;\n\n    for (let i = 0; i < 81; i++) {\n      col = i % 9;\n      row = Math.floor(i / 9);\n\n      let el = document.querySelector(\".col\"+(col+1)+\".row\"+(row+1));\n      if (puzzle[i]) {\n        el.innerHTML = \"<input type=\\\"text\\\" value=\\\"\"+puzzle[i]+\"\\\" disabled>\";\n        el.classList.add(\"default\");\n      } else {\n        el.innerHTML = \"<input type=\\\"text\\\">\";\n      }\n    }\n  }\n\n  getPuzzle() {\n    let p = [\n      5, 3, 0, 0, 7, 0, 0, 0, 0,\n      6, 0 ,0, 1, 9, 5, 0, 0, 0,\n      0, 9, 8, 0, 0, 0, 0, 6, 0,\n      8, 0, 0, 0, 6, 0, 0, 0, 3,\n      4, 0, 0, 8, 0, 3, 0, 0, 1,\n      7, 0, 0, 0, 2, 0, 0, 0, 6,\n      0, 6, 0, 0, 0, 0, 2, 8, 0,\n      0, 0, 0, 4, 1, 9, 0, 0, 5,\n      0, 0, 0, 0, 8, 0, 0, 7, 9\n    ];\n\n    return p;\n  }\n  /**\n   * \n   *\n   * @returns {undefined}\n   */\n  checkEverything() {\n    let isGood = true;\n\n    this.clearErrors();\n    if (!this.checkLine(\"row\", 3)) isGood = false;\n    //if (!this.checkLine(\"col\", 5)) isGood = false;\n\n    //for (let i = 1; i < 10; i++) {\n    //  if (!this.checkSquare(i)) isGood = false;\n    //  if (!this.checkLine(\"row\", i)) isGood = false;\n    //  if (!this.checkLine(\"col\", i)) isGood = false;\n    //}\n\n    if (isGood) {\n      console.log(\"Sudoku puzzle complete!\");\n    } else {\n      console.log(\"Problem in the puzzle\");\n    }\n  }\n\n  /**\n   * \n   *\n   * @returns {undefined}\n   */\n  checkLine(rc, x) {\n    let values = [];\n    let classes;\n    let isGood = true;\n    let matches = document.querySelectorAll(\".\"+rc+x);\n\n    for (let el of matches) {\n      // Skip empty boxes\n      if (!el.childNodes[0].value)\n        continue;\n      \n      // If we have come across the value on this line previously\n      if (values.includes(el.childNodes[0].value)) {\n        // highlight this and previous value\n        \n        el.classList.add(\"error\");\n        document.querySelector(this.test[el.childNodes[0].value]).classList.add(\"error\");\n        isGood = false;\n      } else {\n        values.push(el.childNodes[0].value);\n        // \n        classes = \".\"+el.classList[0]+\".\"+el.classList[1];\n        this.test[el.childNodes[0].value] = classes;\n      }\n    }\n\n    return isGood;\n  }\n\n  /**\n   * \n   * @description Get the starting column of a given square\n   *  E.g, 1 = 1, 2 = 4, 3 =  7, 4 = 1\n   * @returns int x\n   */\n  getStartingCol(i) {\n    let x;\n    switch (i % 3) {\n      case 1:\n        x = 1;\n        break;\n      case 2:\n        x = 4;\n        break;\n      case 0:\n        x = 7;\n        break;\n    }\n    return x; \n  }\n\n  /**\n   * \n   *\n   * @returns {undefined}\n   */\n  checkSquare(i) {\n    let values = [];\n    let classes;\n    let isGood = true;\n    let x, y;\n \n    // Get starting col\n    switch (i % 3) {\n      case 1:\n        x = 1;\n        break;\n      case 2:\n        x = 4;\n        break;\n      case 0:\n        x = 7;\n        break;\n    }\n \n    // Get starting row\n    if (i < 4) {\n      y = 1;\n    } else if (i < 7) {\n      y = 4;\n    } else {\n      y = 7;\n    }\n \n    for (let i = x; i < x+3; i++) {\n      for (let j = y; j < y+3; j++) {\n        let el = document.querySelector(\".col\"+i+\".row\"+j);\n        //console.log(\".col\"+i+\".row\"+j);\n        //console.log(\"X: \",i, \"Y: \", j);\n        //console.log(\".col\"+i+\".row\"+j, el.childNodes[0].value);\n        if (!el.childNodes[0].value) {\n          //isGood = false;\n          if (el.classList.contains(\"error\")) {\n            el.classList.remove(\"error\");\n          }\n          continue;\n        }\n\n        if (values.includes(el.childNodes[0].value)) {\n          if (!el.classList.contains(\"error\")) {\n            el.classList.add(\"error\");\n          }\n          document.querySelector(this.test[el.childNodes[0].value]).classList.add(\"error\");\n          isGood = false;\n        } else if (el.childNodes[0].value) {\n          //if (el.classList.contains(\"error\")) {\n          //  el.classList.remove(\"error\");\n          //}\n          values.push(el.childNodes[0].value);\n\n          classes = \".\"+el.classList[0]+\".\"+el.classList[1];\n          this.test[el.childNodes[0].value] = classes;\n        }\n      }\n    }\n\n    return isGood;\n  }\n\n  getPossibleValues(x, y) {\n    console.log(x, y);\n    let el = document.querySelector(\".\"+y+\".\"+x);\n    let value = el.childNodes[0].value;\n\n    console.log(value);\n  }\n\n  getSquareIndexFromClassList(classList) {\n    // this.parentElement.classList.value\n    let row = /row(\\d)/.exec(classList);\n    let col = /col(\\d)/.exec(classList);\n    \n    let tempCol = Math.ceil(col[1] / 3);\n    let tempRow = (Math.ceil(row[1] / 3) - 1) * 3;\n    let square = tempRow + tempCol;\n\n    return square;\n  }\n\n}\n\nvar sud = new Sudoku();\n\n\n\n\n//let checkel = document.getElementsByClassName(\"btn-check\")[0];\n//checkel.addEventListener(\"click\", check);\n//\n//function check() {\n//  sud.checkEverything();\n//}\n//\n//let clearel = document.getElementsByClassName(\"btn-clear\")[0];\n//clearel.addEventListener(\"click\", clear);\n//\n//function clear() {\n//  sud.clearErrors();\n//}\n\n\n\n"],"sourceRoot":""}